extends layout


block content
    container
        nav(class='navbar fixed-top bg-light')
            span(class='navbar-brand mb-0 h1') Monoid  
            span(class='navbar-text navbar-center') <strong style='color:white'>This application is still a prototype, please treat it as such</strong>
            span(class="navbar-text navbar-right") signed in as #{username}
    br
    container
        .row
            .col-6
                h2 User
                h4 Username
                form(method='POST' action='/updateUsername')
                    <div class="input-group mb-3">
                        input.form-control(type='text' id='username' placeholder='username' value=username name='username' required autocomplete="off")
                        //- <input type="text" class="form-control" placeholder="Recipient's username" aria-label="Recipient's username" aria-describedby="basic-addon2">
                        <div class="input-group-append">
                            button.btn.btn-primary(type='submit') update
                        </div>
                    </div>
                br
                h4 API token
                form(method='POST' action='/updateApiToken')
                    <div class="input-group mb-3">
                        input.form-control(type='text' id='apiToken' placeholder='API token' value=token name='apiToken' required autocomplete="off")        
                        //- <input type="text" class="form-control" placeholder="Recipient's username" aria-label="Recipient's username" aria-describedby="basic-addon2">
                        <div class="input-group-append">
                            button.btn.btn-primary(type='submit') update
                        </div>
                    </div>
                h4 Password
                form(method='POST' action='/updatePassword')
                    div.form-group
                        input.form-control(type='password' id='password' placeholder='Current password' name='password' required autocomplete="off")
                    div.form-group
                        input.form-control(type='password' id='password_new' placeholder='New password' name='password_new' required autocomplete="off")
                        small(class="form-text text-muted") The password must:
                            ul
                                li be at least 10 characters long.
                                li contain at least one uppercase letter.
                                li contain at least one number.
                                li contain at least one special character.
                    div.form-group
                        input.form-control(type='password' id='password_new_verify' placeholder='Verify new password' name='password_new_verify' required autocomplete="off")

                    button.btn.btn-primary(type='submit') Submit


            .col-6
                h2 Status
                br
                br

                .row-justify-content-center
                    h4 API
                    button.btn.btn-lg.btn-block.btn-info(onClick='testApiConnection()') â‡„
                    div(id='connection_status')
                        button.btn.btn-lg.btn-block.btn-outline-dark(disabled=true style="cursor:default") not tested

                    <small id='connection_status_msg'class="form-text text-muted")></small>
                br
                br
                .row-justify-content-center
                    h4 Tap
                    div(id="start_stop")
                        button.btn.btn-warning.btn-lg.btn-block(disabled=true id='start_stop_btn') Checking...
                    //- button.btn.btn-danger.btn-lg.btn-block(disabled=false id='stop_tap' onClick='stopTap()') STOP
                    div
                        div(id='current_tap_status') 
                            button.btn.btn-lg.btn-block.btn-outline-dark( style="cursor:default")


                        <small id='current_tap_status_msg'class="form-text text-muted"></small> 
                br







    script.
        const socket = io();
        function testApiConnection(){
            document.getElementById('connection_status').innerHTML = '<div class="btn btn-lg btn-block btn-outline-warning disabled" style="cursor:default">Checking..</div>'
            document.getElementById('start_stop_btn').disabled = true
            socket.emit('testApiConnection');
        }
        function startTap(){
            document.getElementById('start_stop').innerHTML = '<div class="btn btn-warning btn-lg btn-block disabled"  style="cursor:default">starting tap...</div>'
            document.getElementById('current_tap_status').innerHTML = '<div class="btn btn-lg btn-block btn-outline-dark disabled" style="cursor:default">Loading</div>'

            socket.emit('startTap');
        }
        function stopTap(){
            document.getElementById('start_stop').innerHTML = '<div class="btn btn-warning btn-lg btn-block disabled"  style="cursor:default">stopping tap...</div>'
            document.getElementById('current_tap_status').innerHTML = '<div class="btn btn-lg btn-block btn-outline-dark disabled" style="cursor:default">Loading</div>'
            socket.emit('stopTap');
        }
        socket.on('tap_status', function(status){
            if(status.isRunning){
                document.getElementById('start_stop').innerHTML = '<button id="start_stop_btn" class="btn btn-danger btn-lg btn-block"  onclick=stopTap() style="cursor:default">STOP</button>'

            }else{
                document.getElementById('start_stop').innerHTML = '<button id="start_stop_btn" class="btn btn-success btn-lg btn-block" onclick=startTap() style="cursor:default">START</button>'
            }
            if(status.success && status.isRunning){
                document.getElementById('current_tap_status').innerHTML = '<div class="btn btn-lg btn-block btn-outline-success disabled" style="cursor:default">'+status.current_status+'</div>'
            }else{
                if(status.success && status.isRunning == false){
                    document.getElementById('current_tap_status').innerHTML = '<div class="btn btn-lg btn-block btn-outline-dark disabled" style="cursor:default">'+status.current_status+'</div>'
                }else{
                    document.getElementById('current_tap_status').innerHTML = '<div class="btn btn-lg btn-block btn-outline-danger disabled" style="cursor:default">'+status.current_status+'</div>'
                }
            }
            document.getElementById('current_tap_status_msg').innerHTML = status.msg

        });

        socket.on('connection_status', function(connection_status) {
            if(connection_status.success === false){
                document.getElementById('start_stop_btn').disabled = true
                document.getElementById('connection_status').innerHTML = '<div class="btn btn-lg btn-block btn-outline-danger disabled" style="cursor:default">not connected</div>'
                document.getElementById('connection_status_msg').innerHTML = connection_status.message
            }else{
                document.getElementById('start_stop_btn').disabled = false
                document.getElementById('connection_status_msg').innerHTML = ""
                document.getElementById('connection_status').innerHTML = '<div class="btn btn-lg btn-block btn-outline-success disabled" style="cursor:default">Connected</div>'
            }
            });

        socket.on('nic', function(nic_data) {
            for(let nic in nic_data){
                let status = nic_data[nic].status
                if(status.includes('up')){
                    document.getElementById(nic).innerHTML = '<div class="btn btn-outline-success disabled" style="cursor:default;">'+status+'</div>'
                }else{
                    document.getElementById(nic).innerHTML = '<div class="btn btn-outline-danger disabled" style="cursor:default;">'+status+'</div>'
                    }
                }
            });

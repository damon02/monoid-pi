extends layout


block content
  container
    nav(class='navbar fixed-top')
      .col.col.text-left
        <button class='btn btn-outline-dark' onClick='stopBackground()'>stop background</button>
      .col.meme.col-2
        div(style="text-align: center;")
          span(style="color:#f1c232") Last login
          div(style="text-align: center;  outline: 2px solid #f1c232;")
            div #{last_logged_in}
            div #{last_ip}
      .col.meme.col-2
        div(style="text-align: center;")
          span(style="color:#f1c232") Current login
          div(style="text-align: center;  outline: 2px solid #f1c232;")
            div #{current_logged_in}
            div #{current_ip}

      .col.col.text-right
        form(method='GET'  action='/logout')
          <button class='btn btn-primary' type='submit'>logout</button>
    br
    br
    .row
      .col-4
        h2 User

        h4 API token
        form(method='POST' action='/updateApiToken')
          input(type="hidden" name="_csrf" value=csrfToken)

          <div class="input-group mb-3">
            input.form-control(type='text' id='apiToken' placeholder='API token' value=token name='apiToken' required autocomplete="off")        
            <div class="input-group-append">
              button.btn.btn-primary(type='submit') update
            </div>
          </div>
        h4 Password
        form(method='POST' action='/updatePassword')
          input(type="hidden" name="_csrf" value=csrfToken)
          div.form-group
            input.form-control(type='password' id='password' placeholder='Current password' name='password' required autocomplete="off")
          div.form-group
            input.form-control(type='password' id='password_new' placeholder='New password' name='password_new' required autocomplete="off")
            small(class="form-text") The password must:
             ul
              li be at least 10 characters long.
              li contain at least one uppercase letter.
              li contain at least one number.
              li contain at least one special character.
          div.form-group
            input.form-control(type='password' id='password_new_verify' placeholder='Verify new password' name='password_new_verify' required autocomplete="off")

          button.btn.btn-primary(type='submit') Submit
        br
        if message && message.length
        strong #{message}

      .col.meme.col-4
        h2 System
        .row-justify-content-center
          h4 Time
          div
            h2(style="display: inline-block" id='sys_time') 0

            hr
            .row
              .col
                h4 CPU usage
                div.sys-info
                  h2(style="display: inline-block" id='cpu_usage') -
                  h4(style="display: inline-block") %
              .col
                h4 CPU temp
                div.sys-info
                  h2(style="display: inline-block" id='cpu_temp') -
                  h4(style="display: inline-block") &#8451;
            hr
            .row
              .col
                h4 SD usage
                div.sys-info
                    h2(style="display: inline-block" id='sd_usage') -
                    h4(style="display: inline-block") %
              .col
                h4 RAM usage
                div.sys-info
                  h2(style="display: inline-block" id='ram_usage') -
                  h4(style="display: inline-block") %
            hr
            .row
              .col
                h4= "Network Monitor"
                .row-justify-content-center
                  div(style="display: inline-block;background:#222" id='mon_nic')
              .col
                h4="Network Bridge"
                .row-justify-content-center
                  div(style="display: inline-block;background:#222" id='br_nic')
              hr
          hr

      .col.meme
        h2 Status
        br
        br

        .row-justify-content-center
          h4 API
          button.btn.btn-lg.btn-block.btn-info(onClick='testApiConnection()') â‡„
          div(id='connection_status')
            button.btn.btn-lg.btn-block.btn-outline-dark(disabled=true style="cursor:default") not tested

          <small id='connection_status_msg'class="form-text")></small>
        br
        br
        .row-justify-content-center
          h4 Tap
          div(id="start_stop")
            button.btn.btn-warning.btn-lg.btn-block(disabled=true id='start_stop_btn'  style="cursor:default;background:#222") Checking...
          //- button.btn.btn-danger.btn-lg.btn-block(disabled=false id='stop_tap' onClick='stopTap()') STOP
          div
            div(id='current_tap_status') 
              button.btn.btn-lg.btn-block.btn-outline-dark( style="cursor:default;background:#222")
 
            
            <small id='current_tap_status_msg'class="form-text"></small> 
        br






  script.

    function stopBackground(){
      document.getElementById("myVideo").remove();
    }

    let token = "#{socketToken}"
    const socket = io({
      transportOptions: {
        polling: {
          extraHeaders: {
            'suspicious_token': token
          }
        }
      }
    });
    


    function testApiConnection(){
        document.getElementById('connection_status').innerHTML = '<div class="btn btn-lg btn-block btn-outline-warning disabled" style="cursor:default;background:#222">Checking..</div>'
        document.getElementById('start_stop_btn').disabled = true
        document.getElementById('connection_status_msg').innerHTML = ""
        socket.emit('testApiConnection');
    }
    testApiConnection()

    function startTap(){
        document.getElementById('start_stop').innerHTML = '<div class="btn btn-warning btn-lg btn-block disabled"  style="cursor:default;background:#222">starting tap...</div>'
        document.getElementById('current_tap_status').innerHTML = '<div class="btn btn-lg btn-block btn-outline-dark disabled" style="cursor:default;background:#222">Loading</div>'

        socket.emit('startTap',);
    }

    function stopTap(){
        document.getElementById('start_stop').innerHTML = '<div class="btn btn-warning btn-lg btn-block disabled"  style="cursor:default;background:#222">stopping tap...</div>'
        document.getElementById('current_tap_status').innerHTML = '<div class="btn btn-lg btn-block btn-outline-dark disabled" style="cursor:default;background:#222">Loading</div>'
        socket.emit('stopTap');
    }

    socket.on('tap_status', function(status){

      if(status.isRunning){
          document.getElementById('start_stop').innerHTML = '<button id="start_stop_btn" class="btn btn-danger btn-lg btn-block"  onclick=stopTap() style="cursor:default">STOP</button>'

      }else{
          document.getElementById('start_stop').innerHTML = '<button id="start_stop_btn" class="btn btn-success btn-lg btn-block" onclick=startTap() style="cursor:default">START</button>'
      }

      if(status.success && status.isRunning){
          document.getElementById('current_tap_status').innerHTML = '<div class="btn btn-lg btn-block btn-outline-success disabled" style="cursor:default;background:#222">'+status.current_status+'</div>'
      }else{
      if(status.success && status.isRunning == false){
          document.getElementById('current_tap_status').innerHTML = '<div class="btn btn-lg btn-block btn-outline-dark disabled" style="cursor:default;background:#222">'+status.current_status+'</div>'
      }else{
        document.getElementById('current_tap_status').innerHTML = '<div class="btn btn-lg btn-block btn-outline-danger disabled" style="cursor:default;background:#222">'+status.current_status+'</div>'

      }

      }


      document.getElementById('current_tap_status_msg').innerHTML = status.msg

    });


    socket.on('datetime', function(sys_time) {document.getElementById('sys_time').innerHTML = sys_time});

    socket.on('cpu_usage', function(cpu_data) {document.getElementById('cpu_usage').innerHTML = cpu_data});

    socket.on('file_usage', function(sd_data) {document.getElementById('sd_usage').innerHTML = sd_data});

    socket.on('ram_usage', function(ram_data) {document.getElementById('ram_usage').innerHTML = ram_data});

    socket.on('cpu_temp', function(cpu_temp) {document.getElementById('cpu_temp').innerHTML = cpu_temp});

    
    socket.on('connection_status', function(connection_status) {

      if(connection_status.success === false){

        document.getElementById('start_stop_btn').disabled = true
        document.getElementById('connection_status').innerHTML = '<div class="btn btn-lg btn-block btn-outline-danger disabled" style="cursor:default;background:#222">not connected</div>'
        document.getElementById('connection_status_msg').innerHTML = connection_status.message
      }else{
        document.getElementById('start_stop_btn').disabled = false
        document.getElementById('connection_status_msg').innerHTML = ""
        document.getElementById('connection_status').innerHTML = '<div class="btn btn-lg btn-block btn-outline-success disabled" style="cursor:default;background:#222">Connected</div>'
      }
      
      
      });




    //Kei experimenteel
    socket.on('nic', function(nic_data) {
      for(let nic in nic_data){
          let status = nic_data[nic].status
          if(status.includes('up')){
            document.getElementById(nic).innerHTML = '<div class="btn btn-outline-success disabled" style="cursor:default;background:#222">'+status+'</div>'
          }else{
            document.getElementById(nic).innerHTML = '<div class="btn btn-outline-danger disabled" style="cursor:default;background:#222">'+status+'</div>'
            }
          }
      });
